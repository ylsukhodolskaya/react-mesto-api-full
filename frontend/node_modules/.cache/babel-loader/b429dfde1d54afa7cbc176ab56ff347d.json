{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _parseResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка Api _parseResponse: ${res.status}`);\n  } //===========================================\n  // Получение информации о пользователе\n\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  } // Редактирование информации о пользователе\n\n\n  editUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._parseResponse(res));\n  } //============================================\n  // Редактирование аватара\n\n\n  editAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => this._parseResponse(res));\n  } //=============================================\n  // Получение карточек\n\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  } // Добавление новой карточки через попап\n\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._parseResponse(res));\n  } //===========================================\n  // Меняем статус лайка\n\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._url}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: this._headers\n      }).then(res => this._parseResponse(res));\n    } else {\n      return fetch(`${this._url}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(res => this._parseResponse(res));\n    }\n  } //===========================================\n  // Удаление карточки\n\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  } //===========================================\n  // Аутентификация пользователя\n\n\n  login(data) {\n    return fetch(`${this._url}/signin`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._parseResponse(res));\n  } //===========================================\n  // Регистрация пользователя\n\n\n  register(data) {\n    return fetch(`${this._url}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._parseResponse(res));\n  } //===========================================\n  // Проверка токена пользователя\n\n\n  setToken(token) {\n    this._headers.authorization = token;\n  }\n\n}\n\nexport const api = new Api({\n  url: \"http://localhost:3000\",\n  headers: {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"\"\n  }\n});","map":{"version":3,"names":["Api","constructor","config","_url","url","_headers","headers","_parseResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","editUserInfo","data","method","body","JSON","stringify","name","about","editAvatar","avatar","getInitialCards","addCard","link","changeLikeCardStatus","cardId","isLiked","deleteCard","login","register","setToken","token","authorization","api"],"sources":["/Users/superlisa/dev/react-mesto-api-full/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _parseResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка Api _parseResponse: ${res.status}`)\n  }\n\n\n  //===========================================\n\n  // Получение информации о пользователе\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  }\n  // Редактирование информации о пользователе\n  editUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._parseResponse(res));\n  }\n\n  //============================================\n\n  // Редактирование аватара\n  editAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => this._parseResponse(res));\n  }\n\n  //=============================================\n\n\n  // Получение карточек\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  }\n  // Добавление новой карточки через попап\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._parseResponse(res));\n  }\n\n  //===========================================\n\n  // Меняем статус лайка\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._url}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: this._headers\n      }).then(res => this._parseResponse(res));\n    } else {\n      return fetch(`${this._url}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(res => this._parseResponse(res));\n    }\n  }\n\n\n  //===========================================\n\n  // Удаление карточки\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._parseResponse(res));\n  }\n\n\n  //===========================================\n\n  // Аутентификация пользователя\n  login(data) {\n    return fetch(`${this._url}/signin`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._parseResponse(res));\n  }\n\n\n  //===========================================\n\n  // Регистрация пользователя\n  register(data) {\n    return fetch(`${this._url}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._parseResponse(res));\n  }\n\n  //===========================================\n\n  // Проверка токена пользователя\n  setToken(token) {\n    this._headers.authorization = token;\n  }\n}\n\n\nexport const api = new Api({\n  url: \"http://localhost:3000\",\n  headers: {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"\",\n  }\n});\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}