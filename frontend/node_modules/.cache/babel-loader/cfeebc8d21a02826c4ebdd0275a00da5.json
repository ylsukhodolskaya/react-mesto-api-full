{"ast":null,"code":"var _jsxFileName = \"/Users/superlisa/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport '../App.css';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Main from './Main.js';\nimport ImagePopup from './ImagePopup.js'; // Импортируем объект контекста\n\nimport { CurrentUserContext, defaultUserInfo } from '../contexts/CurrentUserContext.js';\nimport { api } from '../utils/Api.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport InfoTooltipPopup from './InfoTooltip.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isPreviewCardPopupOpen, setIsPreviewCardPopupOpen] = useState(false);\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\n  const [isLastOperationSuccess, setIsLastOperationSuccess] = useState(true);\n  const [selectedCard, setSelectedCard] = useState({}); // Переменная состояния пользователя\n\n  const [currentUser, setCurrentUser] = useState(defaultUserInfo);\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [token, setToken] = useState(localStorage.getItem('jwt') || '');\n\n  function checkToken() {}\n\n  const history = useHistory(); //переменная состояния currentUser и эффект при монтировании, который будет вызывать api.getUserInfo и обновлять стейт-переменную из полученного значения\n\n  useEffect(() => {\n    if (loggedIn) {\n      api.getUserInfo().then(data => {\n        setCurrentUser(data);\n      }).catch(err => {\n        console.log('//////Ошибка api.getUserInfo//////', err);\n        openInfoTooltipPopup(false);\n      });\n    }\n  }, [loggedIn]);\n  useEffect(() => {\n    if (loggedIn) {\n      api.getInitialCards().then(initialCards => {\n        setCards(initialCards);\n      }).catch(err => {\n        console.log('//////Ошибка api.getInitialCards//////', err);\n        openInfoTooltipPopup(false);\n      });\n    }\n  }, [loggedIn]);\n  useEffect(() => {\n    if (token) {\n      api.checkToken(token).then(result => {\n        if (result && result.data) {\n          setLoggedIn(true);\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log('//////Ошибка api.checkToken//////', err);\n        openInfoTooltipPopup(false);\n      });\n    }\n  }, [token]);\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setIsPreviewCardPopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const openInfoTooltipPopup = isSuccess => {\n    setIsInfoTooltipPopupOpen(true);\n    setIsLastOperationSuccess(isSuccess);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsPreviewCardPopupOpen(false);\n    setSelectedCard({});\n    setIsInfoTooltipPopupOpen(false);\n  }; // Функция постановки лайков карточке\n\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(serverCards => serverCards.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n      openInfoTooltipPopup(false);\n    });\n  } // Функция удаления карточки\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(serverCards => serverCards.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n      openInfoTooltipPopup(false);\n    });\n  } // Изменение данных профиля\n\n\n  function handleUpdateUser(userData) {\n    api.editUserInfo(userData).then(userDataServer => {\n      setCurrentUser(userDataServer);\n    }).catch(err => {\n      console.log(err);\n      openInfoTooltipPopup(false);\n    }).finally(() => closeAllPopups());\n  }\n\n  ; // Изменение аватара профиля\n\n  function handleUpdateAvatar(userAvatar) {\n    api.editAvatar(userAvatar).then(userAvatarServer => {\n      setCurrentUser(userAvatarServer);\n    }).catch(err => {\n      console.log(err);\n      openInfoTooltipPopup(false);\n    }).finally(() => closeAllPopups());\n  }\n\n  ; // Добавление новой карточки\n\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card).then(newCard => {\n      setCards([newCard, ...cards]);\n    }).catch(err => {\n      console.log(err);\n      openInfoTooltipPopup(false);\n    }).finally(() => closeAllPopups());\n  } // Регистрация пользователя\n\n\n  function handleRegistration(registrationData) {\n    api.register(registrationData).then(result => {\n      if (result && result.data) {\n        openInfoTooltipPopup(true);\n        history.push('/sign-in');\n      } else {\n        openInfoTooltipPopup(false);\n      }\n    }).catch(err => {\n      console.log(err);\n      openInfoTooltipPopup(false);\n    });\n  } // Аутентификация пользователя\n\n\n  function handleLogin(loginData) {\n    api.login(loginData).then(result => {\n      if (result && result.token) {\n        setEmail(loginData.email);\n        setToken(result.token);\n        localStorage.setItem('jwt', result.token);\n      } else {\n        openInfoTooltipPopup(false);\n      }\n    }).catch(err => {\n      console.log(err);\n      openInfoTooltipPopup(false);\n    });\n  } // Выход из профиля\n\n\n  function logOut() {\n    setLoggedIn(false);\n    setEmail('');\n    localStorage.removeItem('jwt');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        email: email,\n        loggedIn: loggedIn,\n        logOut: logOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/\",\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          cards: cards,\n          component: Main,\n          exact: true,\n          loggedIn: loggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegistration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: isPreviewCardPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltipPopup, {\n        isOpen: isInfoTooltipPopupOpen,\n        onClose: closeAllPopups,\n        isSuccess: isLastOperationSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"UBN9Z0hIA1nX5742VzYZC3P6Aok=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Footer","Main","ImagePopup","CurrentUserContext","defaultUserInfo","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Route","Switch","useHistory","Register","Login","InfoTooltipPopup","ProtectedRoute","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isPreviewCardPopupOpen","setIsPreviewCardPopupOpen","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","isLastOperationSuccess","setIsLastOperationSuccess","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","email","setEmail","token","setToken","localStorage","getItem","checkToken","history","getUserInfo","then","data","catch","err","console","log","openInfoTooltipPopup","getInitialCards","initialCards","result","push","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","isSuccess","closeAllPopups","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","serverCards","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","userData","editUserInfo","userDataServer","finally","handleUpdateAvatar","userAvatar","editAvatar","userAvatarServer","handleAddPlaceSubmit","addCard","handleRegistration","registrationData","register","handleLogin","loginData","login","setItem","logOut","removeItem"],"sources":["/Users/superlisa/dev/react-mesto-auth/src/components/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport '../App.css';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Main from './Main.js';\nimport ImagePopup from './ImagePopup.js';\n// Импортируем объект контекста\nimport { CurrentUserContext, defaultUserInfo } from '../contexts/CurrentUserContext.js';\nimport { api } from '../utils/Api.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport InfoTooltipPopup from './InfoTooltip.js';\nimport ProtectedRoute from './ProtectedRoute.js';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isPreviewCardPopupOpen, setIsPreviewCardPopupOpen] = useState(false);\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\n  const [isLastOperationSuccess, setIsLastOperationSuccess] = useState(true);\n  const [selectedCard, setSelectedCard] = useState({});\n  // Переменная состояния пользователя\n  const [currentUser, setCurrentUser] = useState(defaultUserInfo);\n  const [cards, setCards] = useState([]);\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n\n  const [token, setToken] = useState(localStorage.getItem('jwt') || '');\nfunction checkToken (){\n  \n}\n  const history = useHistory();\n\n  //переменная состояния currentUser и эффект при монтировании, который будет вызывать api.getUserInfo и обновлять стейт-переменную из полученного значения\n  useEffect(() => {\n    if (loggedIn) {\n      api.getUserInfo()\n        .then((data) => {\n          setCurrentUser(data)\n        })\n        .catch((err) => {\n          console.log('//////Ошибка api.getUserInfo//////', err);\n          openInfoTooltipPopup(false);\n        });\n    }\n  }, [loggedIn]);\n\n  useEffect(() => {\n    if (loggedIn) {\n      api.getInitialCards()\n        .then((initialCards) => {\n          setCards(initialCards);\n        })\n        .catch((err) => {\n          console.log('//////Ошибка api.getInitialCards//////', err);\n          openInfoTooltipPopup(false);\n        });\n    }\n  }, [loggedIn]);\n\n  useEffect(() => {\n    if (token) {\n      api.checkToken(token)\n        .then((result) => {\n          if (result && result.data) {\n            setLoggedIn(true);\n            history.push('/');\n          }\n        })\n        .catch((err) => {\n          console.log('//////Ошибка api.checkToken//////', err);\n          openInfoTooltipPopup(false);\n        });\n    }\n  }, [token]);\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  const handleCardClick = (card) => {\n    setIsPreviewCardPopupOpen(true);\n    setSelectedCard(card)\n  }\n\n  const openInfoTooltipPopup = (isSuccess) => {\n    setIsInfoTooltipPopupOpen(true);\n    setIsLastOperationSuccess(isSuccess)\n  }\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsPreviewCardPopupOpen(false);\n    setSelectedCard({});\n    setIsInfoTooltipPopupOpen(false);\n  };\n\n  // Функция постановки лайков карточке\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((serverCards) => serverCards.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.log(err);\n        openInfoTooltipPopup(false);\n      });\n  }\n\n  // Функция удаления карточки\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards((serverCards) => serverCards.filter((c) => c._id !== card._id))\n      })\n      .catch((err) => {\n        console.log(err);\n        openInfoTooltipPopup(false);\n      })\n  }\n\n  // Изменение данных профиля\n  function handleUpdateUser(userData) {\n    api.editUserInfo(userData)\n      .then((userDataServer) => {\n        setCurrentUser(userDataServer)\n      })\n      .catch((err) => {\n        console.log(err);\n        openInfoTooltipPopup(false);\n      })\n      .finally(() => closeAllPopups());\n  };\n\n  // Изменение аватара профиля\n  function handleUpdateAvatar(userAvatar) {\n    api.editAvatar(userAvatar)\n      .then((userAvatarServer) => {\n        setCurrentUser(userAvatarServer)\n      })\n      .catch((err) => {\n        console.log(err);\n        openInfoTooltipPopup(false);\n      })\n      .finally(() => closeAllPopups());\n  };\n\n  // Добавление новой карточки\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n      })\n      .catch((err) => {\n        console.log(err);\n        openInfoTooltipPopup(false);\n      })\n      .finally(() => closeAllPopups());\n  }\n\n  // Регистрация пользователя\n  function handleRegistration(registrationData) {\n    api.register(registrationData)\n      .then((result) => {\n        if (result && result.data) {\n          openInfoTooltipPopup(true);\n          history.push('/sign-in');\n        } else {\n          openInfoTooltipPopup(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        openInfoTooltipPopup(false);\n      })\n  }\n\n  // Аутентификация пользователя\n  function handleLogin(loginData) {\n    api.login(loginData)\n      .then((result) => {\n        if (result && result.token) {\n          setEmail(loginData.email);\n          setToken(result.token);\n          localStorage.setItem('jwt', result.token);\n        } else {\n          openInfoTooltipPopup(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        openInfoTooltipPopup(false);\n      })\n  }\n\n  // Выход из профиля\n  function logOut() {\n    setLoggedIn(false);\n    setEmail('');\n    localStorage.removeItem('jwt');\n  }\n\n  return (\n    <>\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header\n          email={email}\n          loggedIn={loggedIn}\n          logOut={logOut}\n        />\n        <Switch>\n          <ProtectedRoute\n            path=\"/\"\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            cards={cards}\n            component={Main}\n            exact\n            loggedIn={loggedIn}\n          />\n          <Route path=\"/sign-up\" >\n            <Register onRegister={handleRegistration} />\n          </Route>\n          <Route path=\"/sign-in\" >\n            <Login onLogin={handleLogin} />\n          </Route>\n\n        </Switch>\n        <Footer />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <ImagePopup\n          card={selectedCard}\n          isOpen={isPreviewCardPopupOpen}\n          onClose={closeAllPopups}\n        />\n\n        <InfoTooltipPopup\n          isOpen={isInfoTooltipPopupOpen}\n          onClose={closeAllPopups}\n          isSuccess={isLastOperationSuccess}\n        />\n      </CurrentUserContext.Provider>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}